image: docker:latest
services:
  - docker:dind
stages:
  - build
  - docker_build
  - deploy

compile:
  image: golang:1.7
  stage: build
  before_script:
    - go get github.com/BurntSushi/toml
    - go get github.com/line/line-bot-sdk-go/linebot
  script:
    - go build lulbot.go
  artifacts:
    untracked: true
    expire_in: 12h
  only:
    - master

dockerize:
  stage: docker_build
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/raymoo42/lulbot .
    - docker push registry.gitlab.com/raymoo42/lulbot
  only:
    - master
  tags:
    - docker

deployment:
image: debian:stretch-slim
  stage: deploy
  before_script:
    # install ssh-agent
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

    # run ssh-agent
    - eval $(ssh-agent -s)

    # add ssh key stored in SSH_PRIVATE_KEY variable to the agent store
    - ssh-add <(echo "$SSH_KEY")

    # disable host key checking (NOTE: makes you susceptible to man-in-the-middle attacks)
    # WARNING: use only in docker container, if you use it with shell you will overwrite your user's ssh config
    - mkdir -p ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  script:
    - ssh $SSH_USER@line.baka-kawaii.de
    - ip a
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker run -d -p 3000:3000 --name lulobot registry.gitlab.com/raymoo42/lulbot
  environment: droplet